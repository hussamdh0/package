#%RAML 1.0
title: package api
version: v1
baseUri: http://167.71.46.156:8080/api/

/login:
  post:
    description: |
      obtain jwt token for user by providing email or username
    body:
      application/json:
        example: |
          {
            "email":    "cfe@example.de",
            "password": "pass123"
          }

    responses:
      200:
        description: |
          logged in successfully, the response body contains a token that could later be used for authentication.
            In later requests, you have to use header: (Authorization: JWT token)
        body:
          application/json:
            example: |
              {
                  "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJlbWFpbCI6ImNmZUBjZmUuY2ZlIiwiaXNfc3VwZXJ1c2VyIjp0cnVlLCJ1c2VybmFtZSI6ImNmZSIsImV4cCI6MTU3NjUyNTQ0NSwib3JpZ19pYXQiOjE1NzY1MjE4NDV9.4EmFYmNyGE8lt15HlaYsIp-_fj5BR_2KKnqiJsL_nbg"
              }
      400:
        description: Failed to log in
        body:
          application/json:
            example: |
              {
                  "non_field_errors": [
                      "Account with this email/username does not exists"
                  ]
              }
              or
              {
                  "non_field_errors": [
                      "Unable to log in with provided credentials."
                  ]
              }
.


/add_user:
  post:
    description: |
      create new user by providing a new email (must be a new email to our database) you can provide a username but it is optional, if username is provided, it can be used later for login (email is still possible as well)
    body:
      application/json:
        example: |
          {
          	"username": "cfe", (optional)
            "email":    "cfe@example.de",
            "password": "pass123"
          }

    responses:
      200:
        description: created successfully
        body:
          application/json:
            example: |
              {
                "id": 12,
                "username": "cfe",
                "email":    "cfe@example.de",
                "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMiwidXNlcm5hbWUiOiJkZGFzY2FzY2FzY2RAc2QuZGUiLCJleHAiOjE1NzY1MjY3NTAsImVtYWlsIjoiZGRhc2Nhc2Nhc2NkQHNkLmRlIiwib3JpZ19pYXQiOjE1NzY1MjMxNTB9.xosGeZWdpxMVj_8eQIGHTbfvOw9fz5WUYDQRa6nf8x8"
              }
      400:
        description: failed to create new user
        body:
          application/json:
            example: |
              {
                  "username": [
                      "A user with that username already exists."
                  ],
                  "email": [
                      "user with this email address already exists."
                  ],
                  "password": [
                      "This field is required."
                  ]
              }
.


/city:
  get:
    queryParameters:
      search:
        displayName: search
        type: text
        description: used to filter out cities
        example: ber (returns a list of cities that their names contain 'ber' where Berlin is the first city on that list)
        required: false
      longitude:
        displayName: longitude
        type: number
        description: can br passed to along with latitude to sort the results by distance to said coordinates
        example: 51.0
        required: false
      latitude:
        displayName: latitude
        type: number
        description: can br passed to along with longitude to sort the results by distance to said coordinates
        example: 13.7
        required: false
      names_only:
        displayName: names_only
        type: boolean
        description: limit fields to names only
        example: 1
        required: false
    description: !include city/get_list.txt
    responses:
      200:
        body:
          application/json:
            example: !include city/list_no_params.json
.


/journey:
  get:
    queryParameters:
      recent:
        displayName: recent
        type: boolean
        description: filter out journeys created more than 10 minutes ago (useful when polling for real time updates)
        example: 1
        required: false
      date:
        displayName: date
        type: string
        description: return only journeys on that date or.. (see date_tolerance)
        example: 2019-12-25
        required: false
      date_tolerance:
        displayName: date_tolerance
        type: integer
        description: should be accompanied with param 'date' and specifies how tolerant filtering dates is
        example: 1
        required: false
      origin:
        displayName: origin
        type: int (city id)
        description: return journey starting within 'radius' away from
        example: 1941 (Dresden)
        required: false
      destination:
        displayName: destination
        type: int (city id)
        description: return journey arriving within 'radius' away from
        example: 2059 (Cairo)
        required: false
      radius:
        displayName: radius
        type: int (km)
        description: explained, default = 50
        example: 1
        required: false
      my_journeys:
        displayName: my_journeys
        type: boolean
        description: return journeys of logged in user only (ignored if no one is logged in)
        example: 1
        required: false
    description: !include journey/get_list.txt
    responses:
      200:
        body:
          application/json:
            example: !include journey/list_no_params.json
  post:
    description: |
      add new journey to logged in user (Authorization: JWT <token>)
    body:
      application/json:
        example: !include journey/add_journey_ex.json
    responses:
      200:
        description: created successfully
        body:
          application/json:
            example: |
              {
                "id": 15,
                "name": null,
                "date": "1993-03-03",
                "origin": "Sioux Falls",
                "destination": "Athens",
                "phone": "+491781676556",
                "email": "s_sd21@hotmail.com"
              }
      401:
        description: no user is logged in
        body:
          application/json:
            example: |
              {
                "detail": "Authentication credentials were not provided."
              }
      403:
        description: error
        body:
          application/json:
            example: |
              {
                "detail": "You do not have permission to perform this action."
              }

  /{id}:
    get:
      description: get specific journey by id
      responses:
        200:
          body:
            application/json:
              example: |
                api/journey/14   >>
                {
                    "id": 14,
                    "name": "si",
                    "date": "1993-03-03",
                    "origin": "Sioux Falls",
                    "destination": "Dresden",
                    "phone": "+491781676556",
                    "email": "s_sd21@hotmail.com"
                }
    patch:
      description: patch also works.  modify journey (you only need submit the fields to be modified)
        _ _ _
        only users that are owner of said journey have permissions to modify it.
      body:
        application/json:
          example: |
            api/journey/14   >>
            {
              "date": "2020-03-03"
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": 14,
                  "name": "si",
                  "date": "2020-03-03",
                  "origin": "Sioux Falls",
                  "destination": "Dresden",
                  "phone": "+491781676556",
                  "email": "s_sd21@hotmail.com"
                }
        403:
          description: this is not you journey so you cannot delete it
          body:
            application/json:
              example: |
                {"detail":"You must be the owner of this object."}
        401:
          description: you must log in first
          body:
            application/json:
              example: |
                {"detail":"Authentication credentials were not provided."}
    delete:
      description: delete journey
        _ _ _
        only users that are owner of said journey have permissions to delete it.
      responses:
        204:
          description: successfully deleted
        403:
          description: this is not you journey so you cannot delete it
          body:
            application/json:
              example: |
                {"detail":"You must be the owner of this object."}
        401:
          description: you must log in first
          body:
            application/json:
              example: |
                {"detail":"Authentication credentials were not provided."}
.


/user:
  get:
    description: |
      get current user info (404 if no user is logged in, make sure to keep the JWT token in the Authorization header)
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "id": 1,
                "username": "cfe",
                "email": "s_sd21@hotmail.com",
                "successful_journeys": 28,
                "avatar": "erik-lucatero-d2MSDujJl2g-unsplash.jpg",
                "full_name": "Husssam Altaleb"
              }
  patch:
    description: |
      modify currently logged in user info, fields are optional, do not add fields that should not be modified
    body:
      application/json:
        example: |
          {
            "avatar": "https://images.unsplash.com/photo-1549459685-701565fe9ff1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=350&q=80",
            "full_name": "howdy",
            "longitude": 10.0,
            "latitude": 13.0
          }
          or (just update location)
          {
            "longitude": 10.0,
            "latitude": 13.0
          }
          or
          {
            "full_name": "howdy reynolds"
          }
    responses:
      200:
        description: modified successfully
        body:
          application/json:
            example: |
              similar to GET
              {
                "id": 10,
                "username": "howdy",
                "email": "howdy@example.com",
                "successful_journeys": 16,
                "avatar": "https://images.unsplash.com/photo-1549459685-701565fe9ff1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=350&q=80",
                "full_name": "howdy reynolds",
                "longitude": 10.0,
                "latitude": 13.0
              }
      4xx:
        description: error happened and user wasn't updated
        body:
          application/json:
            example: |
              {
                  "longitude": [
                      "A valid number is required."
                  ]
              }
.


/city?latitude=51&longitude=13.7 (this is an example):
  get:
    responses:
      200:
        body:
          application/json:
            example: !include city/list_dresden.json
.


/city?latitude=51&longitude=13.7&names_only=true (this is an example):
  get:
    responses:
      200:
        body:
          application/json:
            example: !include city/list_dresden_names_only.json
.


/journey?origin=1941&destination=2059&radius=100 (this is an example):
  get:
    responses:
      200:
        body:
          application/json:
            example: !include journey/list_dresden_to_cairo_radius_100.json
.


/journey?origin=1941&destination=2059&radius=200 (this is an example):
  get:
    responses:
      200:
        body:
          application/json:
            example: !include journey/list_dresden_to_cairo_radius_200.json
.


/journey?origin=1941&destination=2059&radius=18000 (this is an example):
  get:
    responses:
      200:
        body:
          application/json:
            example: !include journey/list_dresden_to_cairo_radius_18000.json
.

http://hussamtech.de:8080/api/journey?date=2019-12-31&date_tolerance=13&origin=dresden&destination=stuttgart&radius=300
